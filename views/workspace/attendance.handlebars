<h1>Attendance</h1>

{{#if (eq userType "Student")}}
<h1>Welcome, Student {{name}} !</h1>

{{#if (eq n 1)}}
<button id="markedProfPresentButton" disabled> wait for prof</button>
{{/if}}

{{#if (eq n 2)}}
<p>Attendance started at {{H}}:{{M}}{{k}}. Will go on for 10 mins from the start time. </p>
<button id="markPresentButton" > Mark me present</button>
{{/if}}

{{#if (eq n 3)}}
<button disabled >you missed this week's attendance</button>
{{/if}}
{{#if (eq n 4)}}
<button disabled> Marked!</button>
{{/if}}

{{!--
if professor not in db => wait for prof button

else if prof in db and time left and userId not in db => mark me present button

else if prof in db and time left and userId in db => Marked button

if prof in db and time not left and userId not in db => you missed attendance for this week button

--}}

{{else if (eq userType "Professor")}}
<h1>Welcome, Professor {{name}}!</h1>

{{#if (eq needButton true)}}
<button id="markProfPresentButton">Start taking attendance</button>
{{else}}
<button id="markedProfPresentButton" disabled> Marked!</button>
{{/if}}

<h1>Attendance Data</h1>
<ul>
  {{#each studentsWithinRange}}
  <li>
    <strong>Name:</strong> {{this.name}} <br>
    <strong>User ID:</strong> {{this.userId}} <br>
    <strong>Distance:</strong> {{this.distanceFromProfessor}} <br>

  </li>
  {{/each}}
</ul>

{{/if}}


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const markPresentButton = document.getElementById("markPresentButton");
    const markProfPresentButton = document.getElementById("markProfPresentButton");

    if (markProfPresentButton) {
      markProfPresentButton.addEventListener("click", markPresent);
    }
    if (markPresentButton) {
      markPresentButton.addEventListener("click", markPresent);
    }
  });

  async function markPresent() {
    try {
    const pathSegments = window.location.pathname.split('/');
    const sectionId = pathSegments[2];  
    const moduleId = pathSegments[4];   
    const position = await getCurrentPosition();
    const { latitude, longitude } = position.coords;
    const response = await fetch(`/workspace/${sectionId}/modules/${moduleId}/attendance`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        latitude,
        longitude,
      }),
    });

    if (response.ok) {
      const data = await response.json();
      console.log(data.message);
        window.location.reload(); 
    
    } else {
      console.error(`Failed to mark attendance. Status: ${response.status}`);
    }
  } catch (error) {
    console.error("Error marking attendance:", error);
  }
}
    function getCurrentPosition() {
        return new Promise((resolve, reject) => {
            navigator.geolocation.getCurrentPosition(resolve, reject);
        });
    }
    </script>